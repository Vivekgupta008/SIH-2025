// Tourist path data with anomalies
export interface PathPoint {
  time: string;
  lat: number;
  lon: number;
}

export interface TouristPathData {
  tourist_path: PathPoint[];
  anomalies: {
    "Drop-off": PathPoint[];
    "Jump": PathPoint[];
    "Inactivity": PathPoint[];
    "Deviation": PathPoint[];
  };
}

export const touristPathData: TouristPathData = {
  tourist_path: [
    {"time": "2025-01-01 10:38:00", "lat": 26.03271, "lon": 91.26916},
    {"time": "2025-01-01 20:53:00", "lat": 26.25052, "lon": 91.85360},
    {"time": "2025-01-02 03:14:00", "lat": 26.75013, "lon": 91.75637},
    {"time": "2025-01-02 12:21:00", "lat": 26.59046, "lon": 91.56770},
    {"time": "2025-01-02 14:07:00", "lat": 26.18819, "lon": 91.14099},
    {"time": "2025-01-02 17:41:00", "lat": 26.38415, "lon": 91.07551},
    {"time": "2025-01-02 21:46:00", "lat": 26.25998, "lon": 91.89969},
    {"time": "2025-01-02 22:22:00", "lat": 26.37311, "lon": 91.67559},
    {"time": "2025-01-02 22:44:00", "lat": 26.82521, "lon": 91.04859},
    {"time": "2025-01-03 00:42:00", "lat": 26.96350, "lon": 91.06496},
    {"time": "2025-01-03 04:06:00", "lat": 26.05056, "lon": 91.25275},
    {"time": "2025-01-03 04:17:00", "lat": 26.49756, "lon": 91.60452},
    {"time": "2025-01-03 08:02:00", "lat": 26.45813, "lon": 91.00737},
    {"time": "2025-01-03 10:44:00", "lat": 26.64897, "lon": 91.83051},
    {"time": "2025-01-03 15:07:00", "lat": 26.50873, "lon": 91.54242},
    {"time": "2025-01-03 20:36:00", "lat": 26.60564, "lon": 91.64011},
    {"time": "2025-01-04 03:01:00", "lat": 26.18717, "lon": 91.43130},
    {"time": "2025-01-04 06:44:00", "lat": 26.88743, "lon": 91.09638},
    {"time": "2025-01-04 11:14:00", "lat": 26.82609, "lon": 91.76700},
    {"time": "2025-01-04 18:30:00", "lat": 26.79456, "lon": 91.21846},
    {"time": "2025-01-04 23:05:00", "lat": 26.92300, "lon": 91.30884},
    {"time": "2025-01-05 00:39:00", "lat": 26.40118, "lon": 91.27556},
    {"time": "2025-01-05 02:58:00", "lat": 26.04604, "lon": 91.52564},
    {"time": "2025-01-05 03:26:00", "lat": 26.05324, "lon": 91.99229},
    {"time": "2025-01-05 05:31:00", "lat": 26.02724, "lon": 91.95877},
    {"time": "2025-01-05 06:46:00", "lat": 26.94572, "lon": 91.95925},
    {"time": "2025-01-05 07:59:00", "lat": 26.39922, "lon": 91.22922},
    {"time": "2025-01-05 14:02:00", "lat": 26.73715, "lon": 91.12565},
    {"time": "2025-01-05 17:17:00", "lat": 26.31125, "lon": 91.68474},
    {"time": "2025-01-05 18:27:00", "lat": 26.07865, "lon": 91.66841},
    {"time": "2025-01-06 08:39:00", "lat": 26.65713, "lon": 91.05647},
    {"time": "2025-01-06 16:13:00", "lat": 26.65093, "lon": 91.18386},
    {"time": "2025-01-06 17:43:00", "lat": 26.70398, "lon": 91.96540},
    {"time": "2025-01-06 18:16:00", "lat": 26.09033, "lon": 91.95754},
    {"time": "2025-01-07 04:39:00", "lat": 26.96391, "lon": 91.97879},
    {"time": "2025-01-07 05:12:00", "lat": 26.96529, "lon": 91.03132},
    {"time": "2025-01-07 05:31:00", "lat": 26.41218, "lon": 91.49058},
    {"time": "2025-01-07 06:29:00", "lat": 26.67732, "lon": 91.03192},
    {"time": "2025-01-07 08:08:00", "lat": 26.79680, "lon": 91.58906},
    {"time": "2025-01-07 08:40:00", "lat": 26.36312, "lon": 91.93699},
    {"time": "2025-01-07 10:40:00", "lat": 26.90335, "lon": 91.23365},
    {"time": "2025-01-07 13:53:00", "lat": 26.17136, "lon": 91.53780},
    {"time": "2025-01-07 17:11:00", "lat": 26.86139, "lon": 91.40173},
    {"time": "2025-01-08 04:15:00", "lat": 26.51842, "lon": 91.77268},
    {"time": "2025-01-08 05:07:00", "lat": 26.77073, "lon": 91.20422},
    {"time": "2025-01-08 05:15:00", "lat": 26.46734, "lon": 91.15514},
    {"time": "2025-01-08 06:33:00", "lat": 26.27114, "lon": 91.50863},
  ],
  anomalies: {
    "Drop-off": [
      {"time": "2025-01-02 22:22:00", "lat": 26.37311, "lon": 91.67559},
      {"time": "2025-01-03 10:44:00", "lat": 26.64897, "lon": 91.83051},
      {"time": "2025-01-04 03:01:00", "lat": 26.18717, "lon": 91.43130}
    ],
    "Jump": [
      {"time": "2025-01-02 21:46:00", "lat": 26.25998, "lon": 91.89969},
      {"time": "2025-01-05 03:26:00", "lat": 26.05324, "lon": 91.99229},
      {"time": "2025-01-06 18:16:00", "lat": 26.09033, "lon": 91.95754}
    ],
    "Inactivity": [
      {"time": "2025-01-03 00:42:00", "lat": 26.96350, "lon": 91.06496},
      {"time": "2025-01-05 06:46:00", "lat": 26.94572, "lon": 91.95925},
      {"time": "2025-01-07 04:39:00", "lat": 26.96391, "lon": 91.97879}
    ],
    "Deviation": [
      {"time": "2025-01-02 22:44:00", "lat": 26.82521, "lon": 91.04859},
      {"time": "2025-01-05 14:02:00", "lat": 26.73715, "lon": 91.12565},
      {"time": "2025-01-07 08:08:00", "lat": 26.79680, "lon": 91.58906}
    ]
  }
};

// Helper function to get path data for a specific tourist
export const getTouristPathData = (touristId: number): TouristPathData | null => {
  // For now, return the same data for all tourists
  // In a real app, this would fetch data based on touristId
  return touristPathData;
};
